[testenv]
usedevelop = true
basepython = python3.9

[dev]
envdir = {toxworkdir}/dev
deps =
    docker-compose
    -rrequirements.txt
setenv =
    POSTGRES_DB=main
    POSTGRES_HOST=localhost
    POSTGRES_PORT=5555
    POSTGRES_USER=root
    POSTGRES_PASSWORD=root

[testenv:dev-run]
envdir = {[dev]envdir}
deps = {[dev]deps}
setenv = {[dev]setenv}
commands = {envpython} ../manage.py runserver

[testenv:dev-manage]
envdir = {[dev]envdir}
deps = {[dev]deps}
setenv = {[dev]setenv}
commands = {envpython} ../manage.py {posargs}

[testenv:dev-db-up]
envdir = {[dev]envdir}
deps = {[dev]deps}
setenv = {[dev]setenv}
commands =
    docker-compose -f docker-compose.dev.yaml up -d

[testenv:dev-db-down]
envdir = {[dev]envdir}
deps = {[dev]deps}
setenv = {[dev]setenv}
commands =
    docker-compose -f docker-compose.dev.yaml down

[compile]
envdir = {toxworkdir}/compile
deps =
    pip-tools

[testenv:compile]
envdir = {[compile]envdir}
deps = {[compile]deps}
commands =
    pip-compile -r requirements.in
    pip-compile -r requirements-test.in
    pip-compile -r requirements-format.in

[format]
envdir = {toxworkdir}/format
deps =
    -rrequirements-format.txt

[testenv:black]
envdir = {[format]envdir}
deps = {[format]deps}
commands =
    {envpython} -m black {posargs:setup.py src tests}

[testenv:black-check]
envdir = {[format]envdir}
deps = {[format]deps}
commands =
    {envpython} -m black --check {posargs:setup.py src tests}

[testenv:lint]
envdir = {[format]envdir}
deps = {[format]deps}
commands =
    {envpython} -m flake8 {posargs:setup.py src tests}

[test]
envdir = {toxworkdir}/test
deps =
    -rrequirements.txt
    -rrequirements-test.txt

[testenv:test]
envdir = {[test]envdir}
deps = {[test]deps}
commands =
    {envpython} -m pytest {posargs}

[testenv:test-cov]
envdir = {[test]envdir}
deps = {[test]deps}
commands =
    {envpython} -m pytest --cov=src --cov-report=term --cov-report=html {posargs}
